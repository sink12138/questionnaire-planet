<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.buaa.qp.dao.TemplateDao">
    <select id="selectById" resultType="Template">
        select * from template
        where template_id = #{templateId}
    </select>
    <select id="selectByOwner" resultType="Template">
        select * from template
        where owner = #{owner}
        order by template_id desc
    </select>
    <select id="selectQuotaById" resultType="Integer">
        select quota from template
        where template_id = #{templateId}
    </select>
    <select id="selectDuration" parameterType="Integer" resultType="String">
        select if(released, addtime(duration, timediff(now(), release_time)), duration) as duration
        from template
        where template_id = #{templateId}
    </select>
    <select id="selectByCode" resultType="Template" parameterType="String">
        select * from template where code = #{code}
    </select>
    <insert id="insert" parameterType="Template" useGeneratedKeys="true" keyProperty="templateId">
        insert into template(type, owner, title, description, password, creation_time, conclusion, quota, show_index, code, start_time, end_time)
        values (#{type}, #{owner}, #{title}, #{description}, #{password}, now(),
                #{conclusion}, #{quota}, #{showIndex}, #{code}, addtime(#{startTime}, '08:00:00'), addtime(#{endTime}, '08:00:00'));
    </insert>
    <update id="update" parameterType="Template">
        update template
        <set>
            title = #{title},
            description = #{description},
            password = #{password},
            conclusion = #{conclusion},
            quota = #{quota},
            show_index = #{showIndex},
            start_time = addtime(#{startTime}, '08:00:00'),
            end_time = addtime(#{endTime}, '08:00:00'),
            <if test="duration != null">
                duration = #{duration}
            </if>
        </set>
        where template_id = #{templateId};
        <choose>
            <when test="startTime == null">
                drop event if exists ${"start"+templateId};
            </when>
            <otherwise>
                drop event if exists ${"start"+templateId};
                create event ${"start"+templateId}
                on schedule at addtime(#{startTime}, '08:00:00') do
                update template
                set start_time = null, release_time = if(released, release_time, now()), released = true
                where template_id = #{templateId};
            </otherwise>
        </choose>
        <choose>
            <when test="endTime == null">
                drop event if exists ${"end"+templateId};
            </when>
            <otherwise>
                drop event if exists ${"end"+templateId};
                create event ${"end"+templateId}
                on schedule at addtime(#{endTime}, '08:00:00') do
                update template
                set end_time = null, duration = if(released, addtime(duration, timediff(now(), release_time)), duration), released = false
                where template_id = #{templateId}
            </otherwise>
        </choose>
    </update>
    <update id="createEvents" parameterType="Template">
        <if test="startTime != null">
            create event ${"start"+templateId}
            on schedule at addtime(#{startTime}, '08:00:00') do
            update template
            set start_time = null, release_time = if(released, release_time, now()), released = true
            where template_id = #{templateId};
        </if>
        <if test="endTime != null">
            create event ${"end"+templateId}
            on schedule at addtime(#{endTime}, '08:00:00') do
            update template
            set end_time = null, duration = if(released, addtime(duration, timediff(now(), release_time)), duration), released = false
            where template_id = #{templateId}
        </if>
    </update>
    <update id="updateReleased" parameterType="Template">
        update template
        <set>
            released = #{released},
            <choose>
                <when test="released">
                    release_time = now(),
                    start_time = null
                </when>
                <otherwise>
                    duration = addtime(duration, timediff(now(), release_time))
                </otherwise>
            </choose>
        </set>
        where template_id = #{templateId};
        <if test="released">
            drop event if exists ${"start"+templateId}
        </if>
    </update>
    <update id="updateDeleted" parameterType="Template">
        update template
        set deleted = #{deleted}, start_time = null, end_time = null
        where template_id = #{templateId};
        <if test="deleted">
            drop event if exists ${"start"+templateId};
            drop event if exists ${"end"+templateId}
        </if>
    </update>
    <update id="updateCode" parameterType="Template">
        update template set code = #{code} where template_id = #{templateId}
    </update>
    <delete id="deleteByTid" parameterType="Integer">
        delete from template
        where template_id = #{templateId};
        drop event if exists ${"start"+templateId};
        drop event if exists ${"end"+templateId}
    </delete>
</mapper>